# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  # Jobs do ambiente de desenvolvimento
  build-dev:
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B compile --file pom.xml

  # Jobs do ambiente de desenvolvimento
  build-hmg:
    runs-on: ubuntu-latest
    environment:
      name: hmg
    needs: build-dev
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B test --file pom.xml

      # Executa os passos da an치lise do c칩digo com o sonarcube
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=thiagomathiassimon_calculadora1 org.jacoco:jacoco-maven-plugin:prepare-agent -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
  # Jobs do ambiente de desenvolvimento
  build-prd:
    runs-on: ubuntu-latest
    environment:
      name: prd
    needs: build-hmg
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests

      # Cria o artefato de download
      - name: Crie uma pasta tempor치ria de downloads de artefatos
        run: mkdir staging
      - name: Copia os artefatos a serem publicados na pasta tempor치ria
        run: cp target/*jar-with-dependencies.jar staging
      - name: Usa Upload Artifact do GitHub Action
        uses: actions/upload-artifact@v2
        with:
          name: Package
          path: staging
